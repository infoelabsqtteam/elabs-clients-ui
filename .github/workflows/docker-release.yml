# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Docker Build - Release 
on:
  push:
    branches: [ 'release/v**' ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    ########################### Elabs Aws - ###########################
    # Elabs Aws
    - name: Configure AWS credentials Elabs
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ELABS_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.ELABS_AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.ELABS_REGION }}

    - name: Set Git Env
      run: echo $GITHUB_ENV
      
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: List of the GitHub Actions environment variables on Ubunt
      run: env  

    - name: Get VERSION
      run: echo "VERSION=$(date +%Y%m%d)" >> $GITHUB_ENV
      
    - name: Get Availability
      run: echo "Availability=UI-GA" >> $GITHUB_ENV
    
    - name: Set up Node
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    
    - name: Installing NPM and Angular
      run: | 
        CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain ui-libs --domain-owner 292474393014 --region ap-south-1 --query authorizationToken --output text`
        aws codeartifact login --tool npm --repository ui-library --domain ui-libs --domain-owner 292474393014 --region ap-south-1
        echo $CODEARTIFACT_AUTH_TOKEN
        node -v
        npm -v
        npm install
        npm install -g @angular/cli@13.0.0
    
    - name: Set Node Options
      run: echo "NODE_OPTIONS=--max_old_space_size=${{ secrets.RAM }}" >> $GITHUB_ENV
    
    - name: Building
      run: ng build --configuration=develop --unhandled-rejections=mode
    
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: elabs-client
      #  IMAGE_TAG: $VERSION-$GITHUB_RUN_NUMBER-$Availability -> not working
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION-$GITHUB_RUN_NUMBER-$Availability .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION-$GITHUB_RUN_NUMBER-$Availability
