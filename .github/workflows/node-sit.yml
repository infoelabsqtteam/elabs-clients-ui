# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Angular CI with Node - SIT
on:
  push:
    branches: [ sit ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.REGION }}
        
    - name: Set up Node
      uses: actions/setup-node@v2
      with:
        node-version: '${{ secrets.NODE_VERSION }}'
    
    - name: Installing source NPM dependencies...
      run: npm install
      
    - name: Installing Angular
      run: npm install -g @angular/cli
    
    
    - name: Set Node Options
      run: echo "NODE_OPTIONS=--max_old_space_size=${{ secrets.RAM }}" >> $GITHUB_ENV
    
    - name: Building
      run: ng build --configuration=${{ secrets.ENVIRONMENT_SIT }}
     
    # Deploy InventLands    
    - name: Clean up existing deployment - InventLands
      run: aws s3 rm s3://testlims.inventlands.com --recursive

    - name: Upload data
      run: aws s3 sync dist s3://testlims.inventlands.com

    - name: Clean up cache
      run: aws cloudfront create-invalidation --distribution-id E2YD9VQ0GCK2IJ --paths '/*'

  # Deploy Sanskar SIT
    - name: Clean up existing deployment - Sanskar
      run: aws s3 rm s3://sit-sanskar.e-labs.ai --recursive

    - name: Upload data
      run: aws s3 sync dist s3://sit-sanskar.e-labs.ai

    - name: Clean up cache
      run: aws cloudfront create-invalidation --distribution-id E2DM82H0I1K8V0 --paths '/*'
  
  # Deploy ITL Sit
    - name: Clean up existing deployment - Sanskar
      run: aws s3 rm s3://itllabs.e-labs.ai --recursive

    - name: Upload data
      run: aws s3 sync dist s3://itllabs.e-labs.ai

    - name: Clean up cache
      run: aws cloudfront create-invalidation --distribution-id E35I1KJPO9P1V0 --paths '/*'
